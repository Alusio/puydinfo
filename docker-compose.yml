version: '3.7'

services:
  web:
    build:
      context: ./
    links:
      - db:db
    command: gunicorn mon_site.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/code/blog/static
    expose:
      - 8000
    env_file: var.env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: "exit 0"
  db:
    image: postgres:11.5-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: var.env.db
    healthcheck:
      test: "exit 0"

  nginx:
    image: nginx:1.15-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      web:
        condition: service_healthy
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


volumes:
  postgres_data:
  static_volume: